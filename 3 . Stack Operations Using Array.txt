#include<iostream>using namespace std;class Stack{	private:		int max_no_of_elements;		double *array;		int top;			public:		Stack(){			top =-1;			max_no_of_elements = 0;			array = new double[max_no_of_elements];		}		bool Array_is_full(){			if(top == max_no_of_elements-1){				return true;						}			else{				return false;						}				}		bool Array_is_empty(){			if(top ==-1){				return true;						}			else{				return false;						}				}		double getElementFromUser(){			double value;						cout<<"Enter value to push : ";			cin >> value;			return value;		}		void setMaxNoOfElements(){			delete[] array;			cout<<"ENTER THE MAX NUMBER OF ELEMENTS THE ARRAY SHOULD HAVE : ";			cin>>max_no_of_elements;			array = new double[max_no_of_elements];		}		void push(double data){			if(this->Array_is_full()){				cout<<"Stack is full"<<endl;			}			else{				top+=1;				*(array+top) = data;				cout<<"Success"<<endl;						}		}		double pop(){			if(this->Array_is_empty()){				cout<<"Stack is empty"<<endl;						}			else{				double data = *(array+top);				top-=1;				return data;			}		}		void stacktop(){			if(this->Array_is_empty()){				cout<<"Stack is empty"<<endl;						}			else{				cout<<"The topmost element is :"<<*(array+top)<<endl;			}		}};int main(){	Stack newArray;	newArray.setMaxNoOfElements();	bool not_quit = true;	while(not_quit){		int choice;		cout<<"Enter choice to do function 1)Push 2) Pop 3)Check Top of Stack 4)Quit :";		cin>>choice;		switch(choice){			case 1:				double pushdata ;				pushdata = newArray.getElementFromUser();				newArray.push(pushdata);				break;			case 2:				double popdata;				bool is_empty;				is_empty = newArray.Array_is_empty();				popdata = newArray.pop();				if(!is_empty){					cout<<"Popped element is : "<<popdata<<endl;				}				break;			case 3:				newArray.stacktop();				break;			case 4:				not_quit = false;					}	}	return 0;}